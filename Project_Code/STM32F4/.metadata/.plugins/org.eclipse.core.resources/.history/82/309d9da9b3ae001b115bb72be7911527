
#include "players.h"

/* typedef deelnemer aanmaken */
typedef struct
{
	uint8_t ID;			// elke speler heeft een ID ( deze wordt verstuurd over de UART IR )
	char Name[20]; 		// Naam van de speler ( vaste naam bijgehouden in de lijst )

} PLAYER ;

/* deelnemerslijst */

PLAYER deelnemerslijst[20] =
{
	//	{  ID ,  Name 			}
		{ 41 , "RED" 			},
		{ 200 , "GREEN"			},
		{ 300 ,	"BLUE"			},
		{ 400 ,	"YELLOW"		} 		/* vergeet hier geen ',' te zetten!!!*/
	//	{ 		, 				},
	//	{ 		, 				},
	//	{ 		, 				},
	//	{ 		, 				},
	//	{ 		, 				},
	//	{ 		, 				},

};




/* Functies */


/*
 * LookForKillerID:
 *
 * -> vergelijkt de ontvangen IR data met de ID's van de deelnemerslijst
 * is ID aanwezig in de deelnemerslijst dan '1' returnen
 * anders wordt een '0' terug gestuurd
 */
uint8_t LookForKillerID( uint8_t DATA )
{
	for(uint8_t i = 0; i < sizeof(deelnemerslijst) ; i++ )
	{
		if(DATA == deelnemerslijst[i].ID )
		{
			// speler gevonden (staat in lijst)
			return 1;
		}
	}

	// ID niet gevonden ( geen bestaande speler gevonden )
	return 0;
}


/*
 * NameOfKillerInString:
 *
 * -> Wanneer DATA gelijk is aan een deelnemerslijst player
 * zet de functie de naam van de speler in de string die meegegeven wordt met de functie
 */
uint8_t NameOfKillerInString ( char * string[] , uint8_t DATA )
{
	for (uint8_t i = 0; i < sizeof(deelnemerslijst) ; i++ )
	{
		if (DATA == deelnemerslijst[i].ID )
		{
			//Geselecteerde speler is gevonden
			strcpy(string,deelnemerslijst[i].Name);
			return 1;
		}
	}

	//default name invullen
	strcpy(string,"Unknown");
	return 0;
}
